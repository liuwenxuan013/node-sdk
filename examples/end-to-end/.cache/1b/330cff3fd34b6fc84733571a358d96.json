{"id":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","dependencies":[{"name":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/package.json","includedInParent":true,"mtime":1603149609479},{"name":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/globalpayments-api/package.json","includedInParent":true,"mtime":1603148306698},{"name":"../","loc":{"line":3,"column":17},"parent":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/globalpayments-api/lib/src/Entities/Transaction.js","resolved":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/globalpayments-api/lib/src/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../\");\nvar Transaction = /** @class */ (function () {\n    function Transaction() {\n    }\n    Object.defineProperty(Transaction.prototype, \"transactionId\", {\n        get: function () {\n            return this.transactionReference.transactionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transaction.fromId = function (transactionId, orderId, paymentMethodType) {\n        if (paymentMethodType === void 0) { paymentMethodType = _1.PaymentMethodType.Credit; }\n        var transaction = new Transaction();\n        transaction.transactionReference = new _1.TransactionReference();\n        transaction.transactionReference.transactionId = transactionId;\n        if (orderId &&\n            (typeof orderId === \"string\" ||\n                Object.prototype.toString.call(orderId) === \"[object String]\")) {\n            transaction.transactionReference.orderId = orderId;\n        }\n        else if (orderId) {\n            paymentMethodType = orderId;\n        }\n        transaction.transactionReference.paymentMethodType = paymentMethodType;\n        return transaction;\n    };\n    /**\n     * Allows for a follow-up request to add an additional authorization\n     *\n     * @param string|number amount Amount to authorize\n     *\n     * @return AuthorizationBuilder\n     */\n    Transaction.prototype.additionalAuth = function (amount) {\n        return new _1.AuthorizationBuilder(_1.TransactionType.Auth)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount)\n            .withModifier(_1.TransactionModifier.Additional);\n    };\n    /**\n     * Allows for a follow-up request to add the transaction to an open batch\n     *\n     * @param string|number amount Amount to capture\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.capture = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Capture)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    /**\n     * Allows for a follow-up request to edit the transaction\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.edit = function () {\n        var builder = new _1.ManagementBuilder(_1.TransactionType.Edit).withPaymentMethod(this.transactionReference);\n        if (this.commercialIndicator) {\n            builder = builder.withModifier(_1.TransactionModifier.LevelII);\n        }\n        return builder;\n    };\n    Transaction.prototype.hold = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Hold).withPaymentMethod(this.transactionReference);\n    };\n    /**\n     * Allows for a follow-up request to refund the transaction\n     *\n     * @param string|number amount Amount to refund\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.refund = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Refund)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    Transaction.prototype.release = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Release).withPaymentMethod(this.transactionReference);\n    };\n    /**\n     * Allows for a follow-up request to reverse the transaction\n     *\n     * @param string|number amount Amount to reverse\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.reverse = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Reversal)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    /**\n     * Allows for a follow-up request to void the transaction\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.void = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Void).withPaymentMethod(this.transactionReference);\n    };\n    return Transaction;\n}());\nexports.Transaction = Transaction;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/globalpayments-api/lib/src/Entities/Transaction.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"node_modules/globalpayments-api/lib/src/Entities/Transaction.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _1 = require(\"../\");\nvar Transaction = /** @class */ (function () {\n    function Transaction() {\n    }\n    Object.defineProperty(Transaction.prototype, \"transactionId\", {\n        get: function () {\n            return this.transactionReference.transactionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Transaction.fromId = function (transactionId, orderId, paymentMethodType) {\n        if (paymentMethodType === void 0) { paymentMethodType = _1.PaymentMethodType.Credit; }\n        var transaction = new Transaction();\n        transaction.transactionReference = new _1.TransactionReference();\n        transaction.transactionReference.transactionId = transactionId;\n        if (orderId &&\n            (typeof orderId === \"string\" ||\n                Object.prototype.toString.call(orderId) === \"[object String]\")) {\n            transaction.transactionReference.orderId = orderId;\n        }\n        else if (orderId) {\n            paymentMethodType = orderId;\n        }\n        transaction.transactionReference.paymentMethodType = paymentMethodType;\n        return transaction;\n    };\n    /**\n     * Allows for a follow-up request to add an additional authorization\n     *\n     * @param string|number amount Amount to authorize\n     *\n     * @return AuthorizationBuilder\n     */\n    Transaction.prototype.additionalAuth = function (amount) {\n        return new _1.AuthorizationBuilder(_1.TransactionType.Auth)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount)\n            .withModifier(_1.TransactionModifier.Additional);\n    };\n    /**\n     * Allows for a follow-up request to add the transaction to an open batch\n     *\n     * @param string|number amount Amount to capture\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.capture = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Capture)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    /**\n     * Allows for a follow-up request to edit the transaction\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.edit = function () {\n        var builder = new _1.ManagementBuilder(_1.TransactionType.Edit).withPaymentMethod(this.transactionReference);\n        if (this.commercialIndicator) {\n            builder = builder.withModifier(_1.TransactionModifier.LevelII);\n        }\n        return builder;\n    };\n    Transaction.prototype.hold = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Hold).withPaymentMethod(this.transactionReference);\n    };\n    /**\n     * Allows for a follow-up request to refund the transaction\n     *\n     * @param string|number amount Amount to refund\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.refund = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Refund)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    Transaction.prototype.release = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Release).withPaymentMethod(this.transactionReference);\n    };\n    /**\n     * Allows for a follow-up request to reverse the transaction\n     *\n     * @param string|number amount Amount to reverse\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.reverse = function (amount) {\n        return new _1.ManagementBuilder(_1.TransactionType.Reversal)\n            .withPaymentMethod(this.transactionReference)\n            .withAmount(amount);\n    };\n    /**\n     * Allows for a follow-up request to void the transaction\n     *\n     * @return ManagementBuilder\n     */\n    Transaction.prototype.void = function () {\n        return new _1.ManagementBuilder(_1.TransactionType.Void).withPaymentMethod(this.transactionReference);\n    };\n    return Transaction;\n}());\nexports.Transaction = Transaction;\n"},"lineCount":108}},"error":null,"hash":"e996776bca503b4ca71c2877b4d88b30","cacheData":{"env":{}}}