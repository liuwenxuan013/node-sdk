{"id":"node_modules/sax/lib/sax.js","dependencies":[{"name":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/package.json","includedInParent":true,"mtime":1603149609479},{"name":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/sax/package.json","includedInParent":true,"mtime":1603148306799},{"name":"stream","optional":true,"loc":{"line":141,"column":23},"parent":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/sax/lib/sax.js","resolved":"/Users/liuwenxuan/WebstormProjects/GlobalPaymentnode-sdk/examples/end-to-end/node_modules/stream-browserify/index.js"}],"generated":{"js":"// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.tagCase = parser.opt.lowercasetags ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.position = parser.line = parser.column = 0\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , end: function () { return this.write(null) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(me)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this._parser.write(chunk.toString())\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"\\r\\n\\t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , nameStart = letter+\"_:\"\n  , nameBody = nameStart+number+\"-.\"\n  , quote = \"'\\\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\nnameStart = charClass(nameStart)\nnameBody = charClass(nameBody)\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction is (charclass, c) {\n  return charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !charclass[c]\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_QUOTED          : S++ // <?hi \"there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"apos\" : \"'\"\n, \"quot\" : \"\\\"\"\n, \"amp\"  : \"&\"\n, \"gt\"   : \">\"\n, \"lt\"   : \"<\"\n}\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(/\\s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  er += \"\\nLine: \"+parser.line+\n        \"\\nColumn: \"+parser.column+\n        \"\\nChar: \"+parser.c\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (parser.state !== S.TEXT) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.tagCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || qn.prefix\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = tag.ns[prefix] || \"\"\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.tagCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity]) return parser.ENTITIES[entity]\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n  return String.fromCharCode(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    parser.position ++\n    if (c === \"\\n\") {\n      parser.line ++\n      parser.column = 0\n    } else parser.column ++\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c) {\n              parser.position ++\n              if (c === \"\\n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(\"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          emitNode(parser, \"onscript\", parser.script)\n          parser.state = S.CLOSE_TAG\n          parser.script = \"\"\n          parser.tagName = \"\"\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(quote, c)) {\n          parser.state = S.PROC_INST_QUOTED\n          parser.q = c\n          parser.procInstBody += c\n        } else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.PROC_INST_QUOTED:\n        parser.procInstBody += c\n        if (c === parser.q) {\n          parser.state = S.PROC_INST_BODY\n          parser.q = \"\"\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) strictFail(parser,\n            \"Invalid tagname in closing tag.\")\n          else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(\"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(\"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports)\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/sax/lib/sax.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/sax/lib/sax.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}}],"sources":{"node_modules/sax/lib/sax.js":"// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.tagCase = parser.opt.lowercasetags ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.position = parser.line = parser.column = 0\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , end: function () { return this.write(null) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(me)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this._parser.write(chunk.toString())\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"\\r\\n\\t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , nameStart = letter+\"_:\"\n  , nameBody = nameStart+number+\"-.\"\n  , quote = \"'\\\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\nnameStart = charClass(nameStart)\nnameBody = charClass(nameBody)\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction is (charclass, c) {\n  return charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !charclass[c]\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_QUOTED          : S++ // <?hi \"there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"apos\" : \"'\"\n, \"quot\" : \"\\\"\"\n, \"amp\"  : \"&\"\n, \"gt\"   : \">\"\n, \"lt\"   : \"<\"\n}\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(/\\s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  er += \"\\nLine: \"+parser.line+\n        \"\\nColumn: \"+parser.column+\n        \"\\nChar: \"+parser.c\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (parser.state !== S.TEXT) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.tagCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"\\n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || qn.prefix\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = tag.ns[prefix] || \"\"\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.tagCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity]) return parser.ENTITIES[entity]\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n  return String.fromCharCode(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    parser.position ++\n    if (c === \"\\n\") {\n      parser.line ++\n      parser.column = 0\n    } else parser.column ++\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c) {\n              parser.position ++\n              if (c === \"\\n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") parser.state = S.OPEN_WAKA\n        else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(\"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          emitNode(parser, \"onscript\", parser.script)\n          parser.state = S.CLOSE_TAG\n          parser.script = \"\"\n          parser.tagName = \"\"\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.startTagPosition = parser.position - 1\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(quote, c)) {\n          parser.state = S.PROC_INST_QUOTED\n          parser.q = c\n          parser.procInstBody += c\n        } else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.PROC_INST_QUOTED:\n        parser.procInstBody += c\n        if (c === parser.q) {\n          parser.state = S.PROC_INST_BODY\n          parser.q = \"\"\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) strictFail(parser,\n            \"Invalid tagname in closing tag.\")\n          else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(\"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(\"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports)\n"},"lineCount":1007}},"error":null,"hash":"09e29d1f46160a8de412e7189e1a459d","cacheData":{"env":{}}}